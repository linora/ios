---
########################################################################
# 【行为概述】
# 调用：precheck
# 添加 DNS 服务器到 /etc/resolv.conf（当前最稳定），并设置开机自启动时生效
# 安装基础依赖包
# 备份原有 yum repo 文件（mv 方式）
# 将 yum base reposity 修改为指定源（优先国内大厂）
# 将 yum epel reposity 修改为指定源（优先国内大厂）
# 执行 yum update_cache（更新本地缓存）
# 安装依赖包（只 epel 中存在）
# 安装依赖包（基础包）
# 创建包存放目录
# 创建脚本存放目录
# 创建通用文件存放目录（依赖于上一步操作）
# 创建手动备份目录
# 创建 zabbix 参数存放目录 /etc/zabbix/zabbix_agentd.d
# 启用必要服务
# 上传相关文件
# 上传相关模板



- include_tasks: setup_vars.yml
- include_tasks: precheck.yml

- block:
    - name: "【OSOptYumRepo】添加 DNS 服务器到 /etc/resolv.conf（当前最稳定），并设置开机自启动时生效"
      shell:
        cmd: |
          touch /etc/resolv.conf && \
          cp /etc/resolv.conf /etc/resolv.conf.$(date +%s%N) && \
          (
            grep -E '^nameserver +{{ g_dns_server }}$' /etc/resolv.conf  ||\
            sed -i '1inameserver {{ g_dns_server }}' /etc/resolv.conf
          )
          # 设置开机自动配置
          grep 'touch /etc/resolv.conf' /etc/rc.local ||\
          cat >> /etc/rc.local <<-EOF
          touch /etc/resolv.conf
          grep -E '^nameserver +{{ g_dns_server }}$' /etc/resolv.conf  ||\
          sed -i '1inameserver {{ g_dns_server }}' /etc/resolv.conf
          EOF
      become: true
      args:
        warn: false

- block:
    - set_fact:
        l_current_os_version:
          "{{ ansible_distribution_major_version | int }}"
        l_target_yum_repo_filename:
          "/etc/yum.repos.d/CentOS-Base-163.db2s.repo"
        l_target_yum_epel_repo_filename:
          "/etc/yum.repos.d/CentOS-epel-aliyun.db2s.repo"
    - stat:
        path: "{{ l_target_yum_repo_filename }}"
      register: r_repo_file
      become: true
    - name: "【OSOptYumRepo】安装基础依赖包"
      yum:
        name:
          - wget
          - libselinux-python
      become: true
    - name: "【OSOptYumRepo】备份原有 yum repo 文件（mv 方式）"
      shell:
        cmd: |
          cd /etc/yum.repos.d/ && \
          repo_list=$(\ls ) && \
          for idx in ${repo_list}
          do
            mv -f ${idx} ${idx}.$(date +%s%N)
          done
      become: true
      when: r_repo_file.stat.exists == false
      #failed_when: " 1 == 2 "
    # get_url 存在 bug（应该是 /etc/resolv.conf 的问题，待验证）
    - name: "【OSOptYumRepo】将 yum base reposity 修改为指定源（优先国内大厂）"
      shell: |
        wget https://mirrors.163.com/.help/CentOS{{ l_current_os_version }}-Base-163.repo \
        -O {{ l_target_yum_repo_filename }}
      become: true
      when: r_repo_file.stat.exists == false
      args:
        warn: false
    - name: "【OSOptYumRepo】将 yum epel reposity 修改为指定源（优先国内大厂）"
      shell: |
        wget http://mirrors.aliyun.com/repo/epel-{{ l_current_os_version }}.repo \
        -O {{ l_target_yum_epel_repo_filename }}
      become: true
      when: r_repo_file.stat.exists == false
      args:
        warn: false
    - name: "【OSOptYumRepo】执行 yum update_cache（更新本地缓存）"
      yum:
        name:
          - openssl
        update_cache: yes
      become: true
      when: r_repo_file.stat.exists == false
    - name: "【OSOptYumRepo】安装依赖包（只 epel 中存在）"
      yum:
        name:
          - python-pip
      become: true
    - name: "【OSOptYumRepo】安装依赖包（基础包）"
      yum:
        name:
          - gcc
          - screen
          - vim
          - '{{ "python-firewall" if ansible_distribution_major_version | int == 7 else "openssl" }}'
          - dmidecode
          - cronie       # crontab 包
          - '{{ "procps" if ansible_distribution_major_version | int == 6 else "procps-ng" }}'    # pkill 工具所在包
      become: true
    - shell:
        cmd: |
          pip install --upgrade pip
    - name: "【OSOptYumRepo】安装 pip 依赖包"
      pip:
        name: exchangelib
        extra_args: "{{ g_pip_source }}"
      become: true

- block:
    - name: "【OSOptYumRepo】创建包存放目录"
      file:
        path: "{{ g_remote_repo_dir }}"
        state: directory
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: 0700
      become: true
    - name: "【OSOptYumRepo】创建脚本存放目录"
      file:
        path: "{{ g_remote_script_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0700
      become: true
      ignore_errors: yes
    - name: "【OSOptYumRepo】创建通用文件存放目录（依赖于上一步操作）"
      file:
        path: "{{ g_remote_common_script_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0700
      become: true
      ignore_errors: yes
    - name: "【OSOptYumRepo】创建手动备份目录"
      file:
        path: "{{ g_remote_manual_backup_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0700
      become: true
      ignore_errors: yes
    - name: "【OSOptYumRepo】创建 zabbix 参数存放目录 /etc/zabbix/zabbix_agentd.d"
      file:
        path: /etc/zabbix/zabbix_agentd.d
        state: directory
        owner: root
        group: root
        mode: 0755
      become: true
    - name: "【OSOptYumRepo】启用必要服务"
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      become: true
      loop:
        - crond
    - name: "【OSOptYumRepo】上传相关文件"
      copy:
        src: "{{ g_common_files_dir }}/{{ item }}"
        dest: "{{ g_remote_common_script_dir }}/"
        owner: root
        group: root
        mode: 0600
        backup: yes
      become: true
      loop:
        - check_ulimit.sh
    - name: "【OSOptYumRepo】上传相关模板"
      template:
        src: "{{ g_common_files_dir }}/{{ item }}"
        dest: "{{ g_remote_common_script_dir }}/"
        owner: root
        group: root
        mode: 0600
        backup: yes
      become: true
      loop:
        - wechat.py
        - sendmail.py

- block:
    - name: "【OSOptYumRepo】设置环境变量"
      shell:
        cmd: |
          grep -E '^export\s+HISTTIMEFORMAT=' /root/.bash_profile ||\
          echo 'export HISTTIMEFORMAT="%F %T"' >> /root/.bash_profile
      become: true
    - name: "【OSOptYumRepo】/etc/profile 配置"
      lineinfile:
        path: "/etc/profile"
        line: "{{ item }}"
        create: yes
      become: true
      with_items:
        - "alias vi='vim'"
